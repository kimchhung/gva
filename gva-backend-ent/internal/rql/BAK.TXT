
// colName formats the query field to database column name in cases the user configured a custom
// field separator. for example: if the user configured the field separator to be ".", the fields
// like "address.name" will be changed to "address_name".
func (p *Parser) colName(field string) string {
	str := field
	if p.FieldSep != DefaultFieldSep {
		var isInterpret bool
		if p.Config.InterpretFieldSepAsNestedJsonbObjectMysql {
			isInterpret = true
			split := strings.Split(field, p.FieldSep)

			str = split[0]
			jsonpath := split[1:]
			if len(jsonpath) > 0 {
				str += p.Config.JsonbSep + "'$." + strings.Join(jsonpath, ".") + "'"
			}
		}

		if p.Config.InterpretFieldSepAsNestedJsonbObject {
			isInterpret = true
			split := strings.Split(field, p.FieldSep)
			str = split[0]
			for i := 1; i < len(split); i++ {
				if regexp.MustCompile(`^[0-9]+$`).MatchString(split[i]) {
					str += p.Config.JsonbSep + split[i]
				} else {
					str += p.Config.JsonbSep + "'" + split[i] + "'"
				}
			}

			i := strings.LastIndex(str, p.Config.JsonbSep)
			if i > 0 {
				str = str[:i] + strings.Replace(str[i:], p.Config.JsonbSep, p.Config.JsonbLastSep, 1)
			}
		}

		if !isInterpret {
			str = strings.Replace(field, p.FieldSep, DefaultFieldSep, -1)
		}
	}

	return str
}