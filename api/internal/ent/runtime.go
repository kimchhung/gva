// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/kimchhung/gva/app/database/schema"
	"github.com/kimchhung/gva/internal/ent/admin"
	"github.com/kimchhung/gva/internal/ent/mytodo"
	"github.com/kimchhung/gva/internal/ent/role"
	"github.com/kimchhung/gva/internal/ent/todo"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminMixin := schema.Admin{}.Mixin()
	adminMixinFields0 := adminMixin[0].Fields()
	_ = adminMixinFields0
	adminFields := schema.Admin{}.Fields()
	_ = adminFields
	// adminDescCreatedAt is the schema descriptor for created_at field.
	adminDescCreatedAt := adminMixinFields0[0].Descriptor()
	// admin.DefaultCreatedAt holds the default value on creation for the created_at field.
	admin.DefaultCreatedAt = adminDescCreatedAt.Default.(func() time.Time)
	// adminDescUpdatedAt is the schema descriptor for updated_at field.
	adminDescUpdatedAt := adminMixinFields0[1].Descriptor()
	// admin.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	admin.DefaultUpdatedAt = adminDescUpdatedAt.Default.(func() time.Time)
	// admin.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	admin.UpdateDefaultUpdatedAt = adminDescUpdatedAt.UpdateDefault.(func() time.Time)
	mytodoMixin := schema.MyTodo{}.Mixin()
	mytodoMixinFields0 := mytodoMixin[0].Fields()
	_ = mytodoMixinFields0
	mytodoFields := schema.MyTodo{}.Fields()
	_ = mytodoFields
	// mytodoDescCreatedAt is the schema descriptor for created_at field.
	mytodoDescCreatedAt := mytodoMixinFields0[0].Descriptor()
	// mytodo.DefaultCreatedAt holds the default value on creation for the created_at field.
	mytodo.DefaultCreatedAt = mytodoDescCreatedAt.Default.(func() time.Time)
	// mytodoDescUpdatedAt is the schema descriptor for updated_at field.
	mytodoDescUpdatedAt := mytodoMixinFields0[1].Descriptor()
	// mytodo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	mytodo.DefaultUpdatedAt = mytodoDescUpdatedAt.Default.(func() time.Time)
	// mytodo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	mytodo.UpdateDefaultUpdatedAt = mytodoDescUpdatedAt.UpdateDefault.(func() time.Time)
	roleMixin := schema.Role{}.Mixin()
	roleMixinFields0 := roleMixin[0].Fields()
	_ = roleMixinFields0
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreatedAt is the schema descriptor for created_at field.
	roleDescCreatedAt := roleMixinFields0[0].Descriptor()
	// role.DefaultCreatedAt holds the default value on creation for the created_at field.
	role.DefaultCreatedAt = roleDescCreatedAt.Default.(func() time.Time)
	// roleDescUpdatedAt is the schema descriptor for updated_at field.
	roleDescUpdatedAt := roleMixinFields0[1].Descriptor()
	// role.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	role.DefaultUpdatedAt = roleDescUpdatedAt.Default.(func() time.Time)
	// role.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	role.UpdateDefaultUpdatedAt = roleDescUpdatedAt.UpdateDefault.(func() time.Time)
	todoMixin := schema.Todo{}.Mixin()
	todoMixinFields0 := todoMixin[0].Fields()
	_ = todoMixinFields0
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescCreatedAt is the schema descriptor for created_at field.
	todoDescCreatedAt := todoMixinFields0[0].Descriptor()
	// todo.DefaultCreatedAt holds the default value on creation for the created_at field.
	todo.DefaultCreatedAt = todoDescCreatedAt.Default.(func() time.Time)
	// todoDescUpdatedAt is the schema descriptor for updated_at field.
	todoDescUpdatedAt := todoMixinFields0[1].Descriptor()
	// todo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	todo.DefaultUpdatedAt = todoDescUpdatedAt.Default.(func() time.Time)
	// todo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	todo.UpdateDefaultUpdatedAt = todoDescUpdatedAt.UpdateDefault.(func() time.Time)
}
