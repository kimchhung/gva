package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/gva/api/web/graph/generated"
	"github.com/gva/app/database/schema/xid"
	"github.com/gva/internal/ent"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id xid.ID) (ent.Noder, error) {
	return r.db.Noder(ctx, id, ent.WithNodeType(ent.IDToType))
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []xid.ID) ([]ent.Noder, error) {
	return r.db.Noders(ctx, ids, ent.WithNodeType(ent.IDToType))
}

// Meta is the resolver for the meta field.
func (r *routeResolver) Meta(ctx context.Context, obj *ent.Route) (string, error) {
	panic(fmt.Errorf("not implemented: Meta - meta"))
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

// Route returns generated.RouteResolver implementation.
func (r *Resolver) Route() generated.RouteResolver { return &routeResolver{r} }

type queryResolver struct{ *Resolver }
type routeResolver struct{ *Resolver }
