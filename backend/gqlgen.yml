schema:
  - api/web/graph/schema/*.gql

exec:
  filename: api/web/graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
#model:
#  filename: graph/model/models_gen.go
#  package: model

# Where should the resolver implementations go?

resolver:
  # Tell gqlgen to generate resolvers next to the schema file.
  layout: follow-schema
  dir: api/web/graph/resolver
  package: resolver
  filename_template: "/{name}_resolver.go"

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - github.com/kimchhung/gva/backend/internal/ent

models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
  Node:
    model:
      # ent.Noder is the new interface generated by the Node template.
      - entgo.io/contrib/entgql/internal/todo/ent.Noder
  Duration:
    model:
      - github.com/99designs/gqlgen/graphql.Duration
  